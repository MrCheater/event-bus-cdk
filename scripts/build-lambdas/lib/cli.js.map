{"version":3,"sources":["../src/cli.js"],"names":["monorepoDir","path","join","__dirname","console","log","lambdasRootDir","bundledLambdasDir","assetsDirectories","fs","readdirSync","map","pathname","filter","lstatSync","isDirectory","existsSync","safeName","name","replace","clean","directory","buildLambda","Promise","resolve","reject","cwd","stdio","output","createWriteStream","substr","length","archive","zlib","level","on","pipe","finalize","main","mkdirSync","error","process","exit"],"mappings":";;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,WAAW,GAAGC,cAAKC,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,CAApB;;AAEAC,OAAO,CAACC,GAAR,CAAYL,WAAZ;;AAEA,MAAMM,cAAc,GAAGL,cAAKC,IAAL,CAAUF,WAAV,EAAuB,SAAvB,CAAvB;;AACA,MAAMO,iBAAiB,GAAGN,cAAKC,IAAL,CAAUF,WAAV,EAAuB,UAAvB,CAA1B;;AAEA,MAAMQ,iBAAiB,GAAGC,YACvBC,WADuB,CACXJ,cADW,EAEvBK,GAFuB,CAEnBC,QAAQ,IAAIX,cAAKC,IAAL,CAAUI,cAAV,EAA0BM,QAA1B,CAFO,EAGvBC,MAHuB,CAGhBD,QAAQ,IAAIH,YAAGK,SAAH,CAAaF,QAAb,EAAuBG,WAHnB,EAIvBF,MAJuB,CAIhBD,QAAQ,IAAIH,YAAGO,UAAH,CAAcf,cAAKC,IAAL,CAAUU,QAAV,EAAoB,cAApB,CAAd,CAJI,CAA1B;;AAMA,MAAMK,QAAQ,GAAGC,IAAI,IAAK,GAAEA,IAAI,CAACC,OAAL,CAAa,GAAb,EAAkB,EAAlB,EAAsBA,OAAtB,CAA8B,SAA9B,EAAyC,GAAzC,CAA8C,MAA1E;;AAEA,MAAMC,KAAK,GAAGC,SAAS,IAAI;AACzB,oBAAOpB,cAAKC,IAAL,CAAUmB,SAAV,EAAqB,cAArB,CAAP;AACA,oBAAOpB,cAAKC,IAAL,CAAUmB,SAAV,EAAqB,mBAArB,CAAP;AACD,CAHD;;AAKA,MAAMC,WAAW,GAAGD,SAAS,IAC3B,IAAIE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,+BAAU,+BAAV,EAA0C;AACxCC,IAAAA,GAAG,EAAEL,SADmC;AAExCM,IAAAA,KAAK,EAAE;AAFiC,GAA1C;;AAKA,QAAMC,MAAM,GAAGnB,YAAGoB,iBAAH,CACb5B,cAAKC,IAAL,CAAUK,iBAAV,EAA6BU,QAAQ,CAACI,SAAS,CAACS,MAAV,CAAiBxB,cAAc,CAACyB,MAAf,GAAwB,CAAzC,CAAD,CAArC,CADa,CAAf;;AAIA,QAAMC,OAAO,GAAG,uBAAS,KAAT,EAAgB;AAC9BC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE;AADH;AADwB,GAAhB,CAAhB;AAMAN,EAAAA,MAAM,CAACO,EAAP,CAAU,OAAV,EAAmBX,OAAnB;AACAQ,EAAAA,OAAO,CAACG,EAAR,CAAW,OAAX,EAAoBV,MAApB;AAEAO,EAAAA,OAAO,CAACI,IAAR,CAAaR,MAAb;AACAI,EAAAA,OAAO,CAACX,SAAR,CAAkBA,SAAlB,EAA6B,KAA7B;AACAW,EAAAA,OAAO,CAACK,QAAR;AACD,CAtBD,CADF;;AAyBA,MAAMC,IAAI,GAAG,YAAY;AACvB,MAAI;AACF,sBAAO/B,iBAAP;;AACAE,gBAAG8B,SAAH,CAAahC,iBAAb;;AAEA,SAAK,MAAMc,SAAX,IAAwBb,iBAAxB,EAA2C;AACzCY,MAAAA,KAAK,CAACC,SAAD,CAAL;AAEA,YAAMC,WAAW,CAACD,SAAD,CAAjB;AACD;AACF,GATD,CASE,OAAOmB,KAAP,EAAc;AACdpC,IAAAA,OAAO,CAACoC,KAAR,CAAcA,KAAd;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD;AACF,CAdD;;eAgBeJ,I","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport { execSync } from 'child_process'\nimport { sync as rimraf } from 'rimraf'\nimport archiver from 'archiver'\n\nconst monorepoDir = path.join(__dirname, '..', '..', '..')\n\nconsole.log(monorepoDir)\n\nconst lambdasRootDir = path.join(monorepoDir, 'lambdas')\nconst bundledLambdasDir = path.join(monorepoDir, '.lambdas')\n\nconst assetsDirectories = fs\n  .readdirSync(lambdasRootDir)\n  .map(pathname => path.join(lambdasRootDir, pathname))\n  .filter(pathname => fs.lstatSync(pathname).isDirectory)\n  .filter(pathname => fs.existsSync(path.join(pathname, 'package.json')))\n\nconst safeName = name => `${name.replace(/@/, '').replace(/[/|\\\\]/g, '-')}.zip`\n\nconst clean = directory => {\n  rimraf(path.join(directory, 'node_modules'))\n  rimraf(path.join(directory, 'package-lock.json'))\n}\n\nconst buildLambda = directory =>\n  new Promise((resolve, reject) => {\n    execSync(`npm install --only=production`, {\n      cwd: directory,\n      stdio: 'inherit'\n    })\n\n    const output = fs.createWriteStream(\n      path.join(bundledLambdasDir, safeName(directory.substr(lambdasRootDir.length + 1)))\n    )\n\n    const archive = archiver('zip', {\n      zlib: {\n        level: 9\n      }\n    })\n\n    output.on('close', resolve)\n    archive.on('error', reject)\n\n    archive.pipe(output)\n    archive.directory(directory, false)\n    archive.finalize()\n  })\n\nconst main = async () => {\n  try {\n    rimraf(bundledLambdasDir)\n    fs.mkdirSync(bundledLambdasDir)\n\n    for (const directory of assetsDirectories) {\n      clean(directory)\n\n      await buildLambda(directory)\n    }\n  } catch (error) {\n    console.error(error)\n    process.exit(1)\n  }\n}\n\nexport default main\n"],"file":"cli.js"}